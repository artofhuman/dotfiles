# ---- Aliases
alias reload='source ~/.zshrc'
alias e='nvim'
alias c='cd ~/code'
alias tls='tmux ls'
alias td='tmux detach'
alias tnew='tmux new-session -As $(basename $PWD | tr . -)'
alias tatt='tmux attach-session -t '

export EDITOR="nvim"

# Git
alias glog="git log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
alias gp='git push origin HEAD'
alias gd='git diff'
alias gc='git commit -v'
alias gca='git commit -a -v'
alias gco='git checkout'
alias gb='git branch --sort=-committerdate'
alias gs='git status -sb' # upgrade your git if -sb breaks for you. it's fun.
alias grm="git status | grep deleted | awk '{\$1=\$2=\"\"; print \$0}' | \
           perl -pe 's/^[ \t]*//' | sed 's/ /\\\\ /g' | xargs git rm"
alias gmc='git diff --name-only --diff-filter=U' # show only files with merge conflicts
alias hpr='hub pull-request'
alias git-amend='git commit --amend -C HEAD'

alias rebase='git rebase -i HEAD~2'
alias rebase3='git rebase -i HEAD~3'
alias rebase4='git rebase -i HEAD~4'
alias rebase5='git rebase -i HEAD~5'
# ---- End Aliases

## Command history configuration
HISTFILE=$HOME/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000

## Completion
autoload -Uz compinit && compinit

# Promt
autoload -U promptinit; promptinit
prompt pure

# DISABLE_UPDATE_PROMPT=true

# KEY BINDINGS
# Use emacs-like key bindings by default:
bindkey -e

bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

rbenv() {
  eval "$(command rbenv init -)"
  rbenv "$@"
}

pyenv () {
  eval "$(pyenv init -)"
  pyenv "$@"
}

nvm () {
  unset -f nvm
  export NVM_DIR=~/.nvm
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
  nvm "$@"
}


node() {
  unset -f node
  export NVM_DIR=~/.nvm
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
  node "$@"
}

npm() {
  unset -f npm
  export NVM_DIR=~/.nvm
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
  npm "$@"
}

#export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export JAVA_HOME=$(/usr/libexec/java_home)

